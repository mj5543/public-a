{"version":3,"file":"src_components_lib_editor_ToastUIEditor_js.509c67e43e5fe496a5ee.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAyC;AACS;AACF;AACpB;AAC5B;AACA;AACA;AAC8B;AAC8E;AAC5B;AAGhF,MAAMK,aAAa,SAASJ,4CAAS,CAAC;EAEpCK,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,SAAS,GAAG,IAAI,CAACA,SAAS,CAACC,IAAI,CAAC,IAAI,CAAC;EAC5C;EACAC,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACC,cAAc,CAAC,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC;EAC7C;EAEAC,SAAS,gBAAGb,4CAAe,CAAC,CAAC;EAE7BU,cAAcA,CAACK,IAAI,EAAE;IACnB,IAAI,CAACF,SAAS,CAACG,OAAO,CAACC,WAAW,CAAC,CAAC,CAACC,OAAO,CAACH,IAAI,CAAC;EACpD;EACAR,SAASA,CAAA,EAAG;IACV,IAAI,CAACI,KAAK,CAACQ,mBAAmB,CAAC;MAACC,OAAO,EAAG,GAAE,IAAI,CAACP,SAAS,CAACG,OAAO,CAACC,WAAW,CAAC,CAAC,CAACI,OAAO,CAAC,CAAE;IAAC,CAAC,CAAC;IAC9F,IAAI,CAACR,SAAS,CAACG,OAAO,CAACC,WAAW,CAAC,CAAC,CAACK,eAAe,CAAC,CAAC;EACxD;EAEAC,MAAMA,CAAA,EAAG;IACP,oBACEvB,gDAAA,CAAAA,2CAAA,qBACEA,gDAAA,CAACE,0DAAM;MACLwB,YAAY,EAAC,UAAU;MACvBC,eAAe,EAAE,KAAM;MACvBC,MAAM,EAAC,qBAAqB;MAC5BC,eAAe,EAAC,SAAS;MACzBC,WAAW,EAAC,2DAAc;MAC1BC,GAAG,EAAE,IAAI,CAAClB;MACV;MAAA;MACAmB,OAAO,EAAE,CAAC,CAAC5B,sFAAmB,EAAE;QAAE6B,WAAW,EAAE9B,gDAAKA;MAAC,CAAC,CAAC,CAAE;MACzD+B,QAAQ,EAAE,IAAI,CAAC3B;MACf;MACA;MACA;MACA;MACA;MACA;MACA;IAAA,CACD,CACD,CAAC;EAEP;AAEF;AAIA,iEAAeF,aAAa;;;;;;;;;;;AC9D5B;AACU;AACV,OAAO,IAAU;AACjB;AACA,sBAAsB,mBAAO,CAAC,kKAAmF,cAAc,eAAe;AAC9I,MAAM,UAAU;AAChB,MAAM,iBAAiB;AACvB;AACA","sources":["webpack://lalalol_build/./src/components/lib/editor/ToastUIEditor.js","webpack://lalalol_build/./src/components/lib/editor/prism-tomorrow.css?0b9a"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport \"@toast-ui/editor/dist/toastui-editor.css\";\r\nimport { Editor } from \"@toast-ui/react-editor\";\r\nimport Prism from 'prismjs';\r\n// 여기 css를 수정해서 코드 하이라이팅 커스텀 가능\r\n// import 'prismjs/themes/prism.css';\r\n// import \"prismjs/themes/prism-tomorrow.css\";\r\nimport './prism-tomorrow.css';\r\nimport '@toast-ui/editor-plugin-code-syntax-highlight/dist/toastui-editor-plugin-code-syntax-highlight.css';\r\nimport codeSyntaxHighlight from '@toast-ui/editor-plugin-code-syntax-highlight';\r\n \r\n\r\nclass ToastUIEditor extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.onChanged = this.onChanged.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this._setEditorHTML(this.props.editContent);\r\n  }\r\n\r\n  editorRef = React.createRef();\r\n\r\n  _setEditorHTML(html) {\r\n    this.editorRef.current.getInstance().setHTML(html);\r\n  }\r\n  onChanged() {\r\n    this.props.onTemperatureChange({content: `${this.editorRef.current.getInstance().getHTML()}`});\r\n    this.editorRef.current.getInstance().moveCursorToEnd();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Editor\r\n          previewStyle=\"vertical\"\r\n          usageStatistics={false}\r\n          height=\"calc(100vh - 150px)\"\r\n          initialEditType=\"wysiwyg\"\r\n          placeholder=\"내용을 입력해주세요..\"\r\n          ref={this.editorRef}\r\n          // initialValue={this.props.editContent}\r\n          plugins={[[codeSyntaxHighlight, { highlighter: Prism }]]}\r\n          onChange={this.onChanged}\r\n          // hooks={{\r\n          //   addImageBlobHook: async (blob, callback) => {\r\n          //     const upload = await this.uploadImage(blob);\r\n          //     callback(upload, \"alt text\");\r\n          //     return false;\r\n          //   }\r\n          // }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n \r\n\r\nexport default ToastUIEditor;","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1702810515250\n      var cssReload = require(\"../../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"names":["React","Component","Editor","Prism","codeSyntaxHighlight","ToastUIEditor","constructor","onChanged","bind","componentDidMount","_setEditorHTML","props","editContent","editorRef","createRef","html","current","getInstance","setHTML","onTemperatureChange","content","getHTML","moveCursorToEnd","render","createElement","Fragment","previewStyle","usageStatistics","height","initialEditType","placeholder","ref","plugins","highlighter","onChange"],"sourceRoot":""}